---
import Layout from "~/layouts/Layout.astro";
import Section from "~/components/Section.astro";
import Heading from "~/components/Heading.astro";
import ProductCard from "~/components/ProductCard.astro";
import {api} from "../lib/api";

const products = await api.listProducts();
---

<Layout pageTitle="محصولات - دان حیات" title="محصولات" description="محصولات قهوه دان حیات">
	<Section class:list={"bg-white"}>
		<Heading>
			<h4 slot="heading-title" class="font-black text-brand-brown h3">طعم خوش قهوه را زندگی كن</h4>
			<p slot="heading-content">
				محصولات ما
			</p>
		</Heading>

		<!-- Products Grid -->
		<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-8">
			{products.map((product) => (
				<ProductCard product={product} />
			))}
		</div>
	</Section>
</Layout>

<script>
  // Import cart store
  import { cartStore } from '../components/CartStore.js';
  
  // Initialize cart store when products page loads
  if (typeof window !== 'undefined') {
    // Initialize the cart store
    cartStore.init();
    
    // Make cart store available globally
    (window as any).cartStore = cartStore;
    
    // Set the ready flag
    (window as any).cartStoreReady = true;
    
    // Dispatch the ready event for any components that are listening
    window.dispatchEvent(new CustomEvent('cart-store-ready'));
    
    // Function to re-initialize all ProductCard instances
    const reinitializeAllProductCards = () => {
      if ((window as any).productCardRegistry) {
        (window as any).productCardRegistry.forEach((productCard: any, productId: string) => {
          productCard.isInitialized = false;
          productCard.initialize();
        });
      }
    };
    
    // Re-initialize on various navigation events
    const setupNavigationHandlers = () => {
      // 1. Astro view transitions (modern approach)
      if (typeof document.startViewTransition === 'function') {
        document.addEventListener('astro:page-load', () => {
          setTimeout(reinitializeAllProductCards, 100);
        });
        
        document.addEventListener('astro:after-swap', () => {
          setTimeout(reinitializeAllProductCards, 100);
        });
      }
      
      // 2. Astro navigation events (fallback)
      document.addEventListener('astro:before-preparation', () => {
        // Navigation preparation started
      });
      
      document.addEventListener('astro:after-preparation', () => {
        // Navigation preparation completed
      });
      
      // 3. Page visibility change (client-side navigation)
      document.addEventListener('visibilitychange', () => {
        if (document.visibilityState === 'visible') {
          setTimeout(reinitializeAllProductCards, 100);
        }
      });
      
      // 4. Focus events (when user returns to tab)
      window.addEventListener('focus', () => {
        setTimeout(reinitializeAllProductCards, 100);
      });
      
      // 5. Popstate events (browser back/forward)
      window.addEventListener('popstate', () => {
        setTimeout(reinitializeAllProductCards, 200);
      });
      
      // 6. Periodic check for stale ProductCards (safety net)
      setInterval(() => {
        if ((window as any).productCardRegistry) {
          const staleCards = Array.from((window as any).productCardRegistry.values()).filter(
            (card: any) => !card.isInitialized || !card.getElements()
          );
          if (staleCards.length > 0) {
            staleCards.forEach((card: any) => {
              card.isInitialized = false;
              card.initialize();
            });
          }
        }
      }, 5000); // Check every 5 seconds
    };
    
    // Setup navigation handlers
    setupNavigationHandlers();
    
    // Initial re-initialization for direct page loads
    if (document.visibilityState === 'visible') {
      setTimeout(reinitializeAllProductCards, 200);
    }
  }
</script>
